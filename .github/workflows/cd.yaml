name: Kubernetes Deployment

on:
  push:
    branches: [ "main" ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the Code
    - name: Checkout Code
      uses: actions/checkout@v4

    # Step 2: Set up gcloud CLI
    - name: Install Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v1
      with:
        version: '426.0.0' 
        service_account_key: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}
        project_id: ${{ secrets.GCP_PROJECT_ID }}

    # Step 3: Install gke-gcloud-auth-plugin and Authenticate kubectl with GKE
    - name: Install gke-gcloud-auth-plugin and Authenticate kubectl
      run: |
        # Install the gke-gcloud-auth-plugin
        gcloud components install gke-gcloud-auth-plugin

        # Decode the base64-encoded service account key
        echo "${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}" | base64 --decode > /tmp/gcp-key.json

        # Authenticate with Google Cloud using the decoded service account key
        gcloud auth activate-service-account --key-file=/tmp/gcp-key.json
        gcloud config set project ${{ secrets.GCP_PROJECT_ID }}
        gcloud container clusters get-credentials ${{ secrets.GKE_CLUSTER_NAME }} \
          --zone ${{ secrets.GKE_CLUSTER_ZONE }} \
          --project ${{ secrets.GCP_PROJECT_ID }}

    # Step 4: Detect Changed Kubernetes YAML Files
    - name: Detect and Apply Changed Files
      run: |
        # Detect files changed in the k8s/ directory
        if git rev-parse HEAD~1 >/dev/null 2>&1; then
          CHANGED_FILES=$(git diff --name-only HEAD~1 HEAD | grep 'k8s/')
        else
          # Handle case when it's the first commit
          CHANGED_FILES=$(git ls-files 'k8s/')
        fi

        # Check if any files were changed
        if [ -z "$CHANGED_FILES" ]; then
          echo "No Kubernetes YAML files changed. Skipping deployment."
          exit 0
        fi

        # Apply each changed file
        for file in $CHANGED_FILES; do
          echo "Applying $file..."
          kubectl apply -f $file
        done

    # Step 5: Verify Deployments
    - name: Verify Deployment
      run: |
        kubectl get pods --all-namespaces
